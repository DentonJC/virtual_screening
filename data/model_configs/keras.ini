# rparams - params grid
# gparams - params grid for gridsearch
# "metrics": [['accuracy'],['average_precision'],['f1'],['f1_micro'],['f1_macro'],['f1_weighted'],['f1_samples'],['neg_log_loss'],['precision'],['recall'],['roc_auc']]


[DEFAULT]
epochs = 10000
ep = 3


[REGRESSION_BACE]
rparams = {
    "epochs" : 300,
    'lr': 0.2,
    'l2': 10**(-8),
    "batch_size": 4
    }

gparams = {
    "epochs" : [30],
    "batch_size": [1, 2, 4, 8, 32, 64, 128, 256, 512],
    'l2' : [10**(-11), 10**(-10), 10**(-9), 10**(-8), 10**(-7), 10**(-6), 10**(-5), 10**(-4), 10**(-3), 10**(-2), 10**(-1), 10**(0), 10**(1), 10**(2), 10**(3)],
    'lr': [0.3, 0.2, 0.1, 0.01, 0.001, 0.0001],
    'momentum' : [0.3, 0.2, 0.1, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
    'class_weight': ['balanced', 'auto', 'uniform', None]
    }   


[LSTM_HIV]
rparams = {
    "batch_size": 32
    }

gparams = {
    "epochs" : [%(ep)s],
    "batch_size": [8, 16, 32, 64, 128, 512],
    "activation": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['binary_crossentropy', 'mean_squared_error', 'mean_absolute_error', 'squared_hinge', 'hinge','binary_crossentropy','poisson','cosine_proximity'],
    "neurons" : [8,16,32,64,256,512,1024],
    "embedding_length" : [8,16,32,64,256]
    }
    

[MLSTM_TOX21]
rparams = {
    "batch_size": 32
    }

gparams = {
    "batch_size": [64],
    "epochs" : [%(ep)s, 10, 30, 50],
    "activation": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['binary_crossentropy', 'mean_squared_error', 'mean_absolute_error', 'squared_hinge', 'hinge','binary_crossentropy','poisson','cosine_proximity'],
    "layers": [0,1,2,3,4,5],
    "neurons_1" : [8,16,32,64,256],
    "neurons_2" : [8,16,32,64,256]
    }
    
    
[LSTM_TOX21]
rparams = {
    "batch_size": 32
    }

gparams = {
    "epochs" : [%(ep)s],
    "batch_size": [8, 16, 32],
    "activation": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['binary_crossentropy', 'mean_squared_error', 'mean_absolute_error', 'squared_hinge', 'hinge','binary_crossentropy','poisson','cosine_proximity'],
    "neurons" : [8,16,32,64,256, 512,1024],
    "embedding_length" : [8,16,32,64,256]
    }
    
    
[MRNN_TOX21]
rparams = {
    "batch_size": 32
    }

gparams = {
    "epochs" : [%(ep)s],
    "activation": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['binary_crossentropy', 'mean_squared_error', 'mean_absolute_error', 'squared_hinge', 'hinge','binary_crossentropy','poisson','cosine_proximity'],
    "layers": [0,1,2,3,4,5],
    "neurons_1" : [8,16,32,64,256],
    "neurons_2" : [8,16,32,64,256]
    }
    
    
[RNN_TOX21]
rparams = {
    "batch_size": 32
    }

gparams = {
    "epochs" : [%(ep)s],
    "batch_size": [8, 16, 32, 64, 128, 512],
    "activation": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['binary_crossentropy', 'mean_squared_error', 'mean_absolute_error', 'squared_hinge', 'hinge','binary_crossentropy','poisson','cosine_proximity'],
    "neurons" : [8,16,32,64,256],
    "embedding_length" : [8,16,32,64,256]
    }

    
[REGRESSION_HIV]
rparams = {
    "batch_size": 32, 
    "activation": 'sigmoid',    
    "optimizer": 'Nadam', 
    "loss": 'mean_squared_error',    
    "learning_rate": 0.001,    
    "momentum": 0.2,
    "init_mode": 'glorot_normal'
    }

gparams = {
    "epochs" : [%(ep)s],
    "batch_size": [1, 8, 32, 128, 512, 2048],
    "activation": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['binary_crossentropy', 'mean_squared_error', 'mean_absolute_error', 'squared_hinge', 'hinge','binary_crossentropy','poisson','cosine_proximity'],
    "learning_rate": [.01, .001, .0001, .0001, .00001],
    "momentum": [0.0, 0.01, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
    "init_mode": ['uniform', 'lecun_uniform', 'normal', 'zero', 'glorot_normal', 'glorot_uniform', 'he_normal', 'he_uniform'],
    "class_weight": ['balanced']
    }
    


[REGRESSION_MUV]
rparams = {
    "batch_size": 1000, 
    "activation": 'sigmoid', 
    "optimizer": 'Adam', 
    "loss": 'binary_crossentropy',    
    "learning_rate": .000001,     
    "momentum": .9,
    "init_mode": 'uniform'
    }
    
gparams = {
    "epochs" : [%(ep)s],
    "batch_size": [1, 8, 32, 128, 512, 2048],
    "activation": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['binary_crossentropy', 'mean_squared_error', 'mean_absolute_error', 'squared_hinge', 'hinge','binary_crossentropy','poisson','cosine_proximity'],
    "learning_rate": [.01, .001, .0001, .0001, .00001],
    "momentum": [0.0, 0.01, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
    "init_mode": ['uniform', 'lecun_uniform', 'normal', 'zero', 'glorot_normal', 'glorot_uniform', 'he_normal', 'he_uniform'],
    "class_weight": ['balanced']
    }

[REGRESSION_TOX21]
rparams = {
    "batch_size": 8, 
    "activation": 'sigmoid', 
    "optimizer": 'Adam', 
    "loss": 'mean_squared_error',    
    "neurons": 32, 
    "learning_rate": .001,     
    "momentum": 0.9,
    "init_mode": 'lecun_uniform'
    }

gparams = {
    "epochs" : [%(ep)s, 10, 20, 50, 100],
    "batch_size": [8, 32, 64, 128, 256, 512],
    "activation": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['binary_crossentropy', 'mean_squared_error', 'mean_absolute_error', 'squared_hinge', 'hinge','binary_crossentropy','poisson','cosine_proximity'],
    "learning_rate": [.01, .001, .0001, .0001, .00001],
    "momentum": [0.0, 0.01, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
    "init_mode": ['uniform', 'lecun_uniform', 'normal', 'zero', 'glorot_normal', 'glorot_uniform', 'he_normal', 'he_uniform'],
    "class_weight": ['balanced', None]
    }


[MPERCEPTRON_TOX21]
rparams = {
    "batch_size": 8
    }

gparams = {
    "epochs" : [%(ep)s, 10, 20, 50, 100],
    "batch_size": [8, 32, 64, 128, 256, 512],
    "activation_1": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "activation_2": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['binary_crossentropy', 'mean_squared_error', 'mean_absolute_error', 'squared_hinge', 'hinge','binary_crossentropy','poisson','cosine_proximity'],
    "learning_rate": [.01, .001, .0001, .0001, .00001],
    "momentum": [0.0, 0.01, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
    "init_mode": ['uniform', 'lecun_uniform', 'normal', 'zero', 'glorot_normal', 'glorot_uniform', 'he_normal', 'he_uniform'],
    "class_weight": ['balanced', None],
    "neurons_1":[10,20,30,50,100,200,500,1000,2000],
    "neurons_2":[10,20,30,50,100,200,500,1000,2000],
    "layers":[1,2,3,4,5,10]
    }


[MPERCEPTRON_BACE]
rparams = {
    "batch_size": 8
    }

gparams = {
    "epochs" : [%(ep)s, 10, 20, 50, 100],
    "batch_size": [8, 32, 64, 128, 256, 512],
    "activation_1": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "activation_2": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['binary_crossentropy', 'mean_squared_error', 'mean_absolute_error', 'squared_hinge', 'hinge','binary_crossentropy','poisson','cosine_proximity'],
    "learning_rate": [.01, .001, .0001, .0001, .00001],
    "momentum": [0.0, 0.01, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
    "init_mode": ['uniform', 'lecun_uniform', 'normal', 'zero', 'glorot_normal', 'glorot_uniform', 'he_normal', 'he_uniform'],
    "class_weight": ['balanced', None],
    "neurons_1":[10,20,30,50,100,200,500,1000,2000],
    "neurons_2":[10,20,30,50,100,200,500,1000,2000],
    "layers":[1,2,3,4,5,10]
    }

[RESIDUAL_HIV]
rparams = {
    "batch_size": 8, 
    "activation_0": 'relu', 
    "activation_1": 'relu', 
    "activation_2": 'relu', 
    "optimizer": 'Adam', 
    "loss": 'binary_crossentropy',    
    # "neurons": 32, 
    "learning_rate": .001, 
    "momentum": .1,
    "init_mode": 'uniform',
    "dropout": 0.1,
    "layers": 3
    }

gparams = {
    "epochs" : [%(ep)s],
    "batch_size": [1, 8, 32, 128, 512, 1024],
    "activation_0": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "activation_1": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "activation_2": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['mean_squared_error', 'mean_absolute_error', 'mean_absolute_percentage_error', 
            'mean_squared_logarithmic_error', 'squared_hinge', 'hinge','binary_crossentropy','kullback_leibler_divergence','poisson','cosine_proximity'],
    "learning_rate": [.01, .001, .0001, 0.0001, .00001],
    "momentum": [0.0, 0.2, 0.4, 0.6, 0.8, 0.9],
    "init_mode": ['uniform', 'lecun_uniform', 'normal', 'zero', 'glorot_normal', 'glorot_uniform', 'he_normal', 'he_uniform'],
    "momentum": [0.0, 0.01, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
    "layers": [1,2,3,5,10],
    "class_weight": ['balanced']
    }

[RESIDUAL_MUV]
rparams = {
    "batch_size": 32, 
    "activation_0": 'softmax', 
    "activation_1": 'softmax', 
    "activation_2": 'softmax',
    "optimizer": 'Adam', 
    "loss": 'mean_squared_error',    
    # "neurons": 32, 
    "learning_rate": .0001,     
    "momentum": .1,
    "init_mode": 'uniform',
    "dropout": 0.1,
    "layers": 2
    }

gparams = {
    "epochs" : [%(ep)s],
    "batch_size": [1, 8, 32, 128, 512, 1024],
    "activation_0": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "activation_1": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "activation_2": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['mean_squared_error', 'mean_absolute_error', 'mean_absolute_percentage_error', 
            'mean_squared_logarithmic_error', 'squared_hinge', 'hinge','binary_crossentropy','kullback_leibler_divergence','poisson','cosine_proximity'],
    "learning_rate": [.01, .001, .0001, 0.0001, .00001],
    "momentum": [0.0, 0.2, 0.4, 0.6, 0.8, 0.9],
    "init_mode": ['uniform', 'lecun_uniform', 'normal', 'zero', 'glorot_normal', 'glorot_uniform', 'he_normal', 'he_uniform'],
    "momentum": [0.0, 0.01, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
    "layers": [1,2,3,5,10],
    "class_weight": ['balanced']
    }

[RESIDUAL_TOX21]
rparams = {
    "batch_size": 64, 
    "activation_0": 'relu', 
    "activation_1": 'relu', 
    "activation_2": 'relu',
    "optimizer": 'Adam', 
    "loss": 'binary_crossentropy',    
    "learning_rate": .001,     
    "momentum": .1,
    "init_mode": 'uniform',
    "dropout": 0.1,
    "layers": 3
    }

gparams = {
    "epochs" : [%(ep)s],
    "batch_size": [1, 8, 32, 128, 512, 1024],
    "activation_0": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "activation_1": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "activation_2": ['softmax', 'elu', 'softplus', 'softsign', 'relu', 'tanh', 'sigmoid', 'hard_sigmoid', 'linear'],
    "optimizer": ['Adam', 'RMSprop', 'SGD', 'Adagrad', 'Adadelta', 'Adamax', 'Nadam'],
    "loss": ['mean_squared_error', 'mean_absolute_error', 'mean_absolute_percentage_error', 
            'mean_squared_logarithmic_error', 'squared_hinge', 'hinge','binary_crossentropy','kullback_leibler_divergence','poisson','cosine_proximity'],
    "learning_rate": [.01, .001, .0001, 0.0001, .00001],
    "momentum": [0.0, 0.2, 0.4, 0.6, 0.8, 0.9],
    "init_mode": ['uniform', 'lecun_uniform', 'normal', 'zero', 'glorot_normal', 'glorot_uniform', 'he_normal', 'he_uniform'],
    "momentum": [0.0, 0.01, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
    "layers": [1,2,3,5,10],
    "class_weight": ['balanced']
    }
